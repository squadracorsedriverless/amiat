ARM GAS  /tmp/ccGJBslP.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"can.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/can.c"
  20              		.section	.text.MX_CAN1_Init,"ax",%progbits
  21              		.align	1
  22              		.global	MX_CAN1_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	MX_CAN1_Init:
  28              	.LFB132:
   1:Core/Src/can.c **** /* USER CODE BEGIN Header */
   2:Core/Src/can.c **** /**
   3:Core/Src/can.c ****  ******************************************************************************
   4:Core/Src/can.c ****  * @file    can.c
   5:Core/Src/can.c ****  * @brief   This file provides code for the configuration
   6:Core/Src/can.c ****  *          of the CAN instances.
   7:Core/Src/can.c ****  ******************************************************************************
   8:Core/Src/can.c ****  * @attention
   9:Core/Src/can.c ****  *
  10:Core/Src/can.c ****  * Copyright (c) 2023 STMicroelectronics.
  11:Core/Src/can.c ****  * All rights reserved.
  12:Core/Src/can.c ****  *
  13:Core/Src/can.c ****  * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/can.c ****  * in the root directory of this software component.
  15:Core/Src/can.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/can.c ****  *
  17:Core/Src/can.c ****  ******************************************************************************
  18:Core/Src/can.c ****  */
  19:Core/Src/can.c **** /* USER CODE END Header */
  20:Core/Src/can.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/can.c **** #include "can.h"
  22:Core/Src/can.c **** 
  23:Core/Src/can.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/can.c **** #include "utils.h"
  25:Core/Src/can.c **** 
  26:Core/Src/can.c **** /* USER CODE END 0 */
  27:Core/Src/can.c **** 
  28:Core/Src/can.c **** CAN_HandleTypeDef hcan1;
  29:Core/Src/can.c **** 
  30:Core/Src/can.c **** /* CAN1 init function */
ARM GAS  /tmp/ccGJBslP.s 			page 2


  31:Core/Src/can.c **** void MX_CAN1_Init(void)
  32:Core/Src/can.c **** {
  29              		.loc 1 32 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  33:Core/Src/can.c **** 
  34:Core/Src/can.c ****     /* USER CODE BEGIN CAN1_Init 0 */
  35:Core/Src/can.c **** 
  36:Core/Src/can.c ****     /* USER CODE END CAN1_Init 0 */
  37:Core/Src/can.c **** 
  38:Core/Src/can.c ****     /* USER CODE BEGIN CAN1_Init 1 */
  39:Core/Src/can.c **** 
  40:Core/Src/can.c ****     /* USER CODE END CAN1_Init 1 */
  41:Core/Src/can.c ****     hcan1.Instance = CAN1;
  37              		.loc 1 41 5 view .LVU1
  38              		.loc 1 41 20 is_stmt 0 view .LVU2
  39 0002 0E48     		ldr	r0, .L5
  40 0004 0E4B     		ldr	r3, .L5+4
  41 0006 0360     		str	r3, [r0]
  42:Core/Src/can.c ****     hcan1.Init.Prescaler = 5;
  42              		.loc 1 42 5 is_stmt 1 view .LVU3
  43              		.loc 1 42 26 is_stmt 0 view .LVU4
  44 0008 0523     		movs	r3, #5
  45 000a 4360     		str	r3, [r0, #4]
  43:Core/Src/can.c ****     hcan1.Init.Mode = CAN_MODE_NORMAL;
  46              		.loc 1 43 5 is_stmt 1 view .LVU5
  47              		.loc 1 43 21 is_stmt 0 view .LVU6
  48 000c 0023     		movs	r3, #0
  49 000e 8360     		str	r3, [r0, #8]
  44:Core/Src/can.c ****     hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
  50              		.loc 1 44 5 is_stmt 1 view .LVU7
  51              		.loc 1 44 30 is_stmt 0 view .LVU8
  52 0010 C360     		str	r3, [r0, #12]
  45:Core/Src/can.c ****     hcan1.Init.TimeSeg1 = CAN_BS1_13TQ;
  53              		.loc 1 45 5 is_stmt 1 view .LVU9
  54              		.loc 1 45 25 is_stmt 0 view .LVU10
  55 0012 4FF44022 		mov	r2, #786432
  56 0016 0261     		str	r2, [r0, #16]
  46:Core/Src/can.c ****     hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
  57              		.loc 1 46 5 is_stmt 1 view .LVU11
  58              		.loc 1 46 25 is_stmt 0 view .LVU12
  59 0018 4FF48012 		mov	r2, #1048576
  60 001c 4261     		str	r2, [r0, #20]
  47:Core/Src/can.c ****     hcan1.Init.TimeTriggeredMode = DISABLE;
  61              		.loc 1 47 5 is_stmt 1 view .LVU13
  62              		.loc 1 47 34 is_stmt 0 view .LVU14
  63 001e 0376     		strb	r3, [r0, #24]
  48:Core/Src/can.c ****     hcan1.Init.AutoBusOff = DISABLE;
  64              		.loc 1 48 5 is_stmt 1 view .LVU15
  65              		.loc 1 48 27 is_stmt 0 view .LVU16
  66 0020 4376     		strb	r3, [r0, #25]
  49:Core/Src/can.c ****     hcan1.Init.AutoWakeUp = DISABLE;
ARM GAS  /tmp/ccGJBslP.s 			page 3


  67              		.loc 1 49 5 is_stmt 1 view .LVU17
  68              		.loc 1 49 27 is_stmt 0 view .LVU18
  69 0022 8376     		strb	r3, [r0, #26]
  50:Core/Src/can.c ****     hcan1.Init.AutoRetransmission = ENABLE;
  70              		.loc 1 50 5 is_stmt 1 view .LVU19
  71              		.loc 1 50 35 is_stmt 0 view .LVU20
  72 0024 0122     		movs	r2, #1
  73 0026 C276     		strb	r2, [r0, #27]
  51:Core/Src/can.c ****     hcan1.Init.ReceiveFifoLocked = DISABLE;
  74              		.loc 1 51 5 is_stmt 1 view .LVU21
  75              		.loc 1 51 34 is_stmt 0 view .LVU22
  76 0028 0377     		strb	r3, [r0, #28]
  52:Core/Src/can.c ****     hcan1.Init.TransmitFifoPriority = DISABLE;
  77              		.loc 1 52 5 is_stmt 1 view .LVU23
  78              		.loc 1 52 37 is_stmt 0 view .LVU24
  79 002a 4377     		strb	r3, [r0, #29]
  53:Core/Src/can.c ****     if (HAL_CAN_Init(&hcan1) != HAL_OK)
  80              		.loc 1 53 5 is_stmt 1 view .LVU25
  81              		.loc 1 53 9 is_stmt 0 view .LVU26
  82 002c FFF7FEFF 		bl	HAL_CAN_Init
  83              	.LVL0:
  84              		.loc 1 53 8 discriminator 1 view .LVU27
  85 0030 00B9     		cbnz	r0, .L4
  86              	.L1:
  54:Core/Src/can.c ****     {
  55:Core/Src/can.c ****         Error_Handler();
  56:Core/Src/can.c ****     }
  57:Core/Src/can.c ****     /* USER CODE BEGIN CAN1_Init 2 */
  58:Core/Src/can.c **** 
  59:Core/Src/can.c ****     /* USER CODE END CAN1_Init 2 */
  60:Core/Src/can.c **** }
  87              		.loc 1 60 1 view .LVU28
  88 0032 08BD     		pop	{r3, pc}
  89              	.L4:
  55:Core/Src/can.c ****     }
  90              		.loc 1 55 9 is_stmt 1 view .LVU29
  91 0034 FFF7FEFF 		bl	Error_Handler
  92              	.LVL1:
  93              		.loc 1 60 1 is_stmt 0 view .LVU30
  94 0038 FBE7     		b	.L1
  95              	.L6:
  96 003a 00BF     		.align	2
  97              	.L5:
  98 003c 00000000 		.word	hcan1
  99 0040 00640040 		.word	1073767424
 100              		.cfi_endproc
 101              	.LFE132:
 103              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
 104              		.align	1
 105              		.global	HAL_CAN_MspInit
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 110              	HAL_CAN_MspInit:
 111              	.LVL2:
 112              	.LFB133:
  61:Core/Src/can.c **** 
ARM GAS  /tmp/ccGJBslP.s 			page 4


  62:Core/Src/can.c **** void HAL_CAN_MspInit(CAN_HandleTypeDef *canHandle)
  63:Core/Src/can.c **** {
 113              		.loc 1 63 1 is_stmt 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 32
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		.loc 1 63 1 is_stmt 0 view .LVU32
 118 0000 00B5     		push	{lr}
 119              		.cfi_def_cfa_offset 4
 120              		.cfi_offset 14, -4
 121 0002 89B0     		sub	sp, sp, #36
 122              		.cfi_def_cfa_offset 40
  64:Core/Src/can.c **** 
  65:Core/Src/can.c ****     GPIO_InitTypeDef GPIO_InitStruct = {0};
 123              		.loc 1 65 5 is_stmt 1 view .LVU33
 124              		.loc 1 65 22 is_stmt 0 view .LVU34
 125 0004 0023     		movs	r3, #0
 126 0006 0393     		str	r3, [sp, #12]
 127 0008 0493     		str	r3, [sp, #16]
 128 000a 0593     		str	r3, [sp, #20]
 129 000c 0693     		str	r3, [sp, #24]
 130 000e 0793     		str	r3, [sp, #28]
  66:Core/Src/can.c ****     if (canHandle->Instance == CAN1)
 131              		.loc 1 66 5 is_stmt 1 view .LVU35
 132              		.loc 1 66 18 is_stmt 0 view .LVU36
 133 0010 0268     		ldr	r2, [r0]
 134              		.loc 1 66 8 view .LVU37
 135 0012 1C4B     		ldr	r3, .L11
 136 0014 9A42     		cmp	r2, r3
 137 0016 02D0     		beq	.L10
 138              	.LVL3:
 139              	.L7:
  67:Core/Src/can.c ****     {
  68:Core/Src/can.c ****         /* USER CODE BEGIN CAN1_MspInit 0 */
  69:Core/Src/can.c **** 
  70:Core/Src/can.c ****         /* USER CODE END CAN1_MspInit 0 */
  71:Core/Src/can.c ****         /* CAN1 clock enable */
  72:Core/Src/can.c ****         __HAL_RCC_CAN1_CLK_ENABLE();
  73:Core/Src/can.c **** 
  74:Core/Src/can.c ****         __HAL_RCC_GPIOA_CLK_ENABLE();
  75:Core/Src/can.c ****         /**CAN1 GPIO Configuration
  76:Core/Src/can.c ****         PA11     ------> CAN1_RX
  77:Core/Src/can.c ****         PA12     ------> CAN1_TX
  78:Core/Src/can.c ****         */
  79:Core/Src/can.c ****         GPIO_InitStruct.Pin = GPIO_PIN_11 | GPIO_PIN_12;
  80:Core/Src/can.c ****         GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  81:Core/Src/can.c ****         GPIO_InitStruct.Pull = GPIO_NOPULL;
  82:Core/Src/can.c ****         GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  83:Core/Src/can.c ****         GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
  84:Core/Src/can.c ****         HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  85:Core/Src/can.c **** 
  86:Core/Src/can.c ****         /* CAN1 interrupt Init */
  87:Core/Src/can.c ****         HAL_NVIC_SetPriority(CAN1_RX0_IRQn, 0, 0);
  88:Core/Src/can.c ****         HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
  89:Core/Src/can.c ****         HAL_NVIC_SetPriority(CAN1_RX1_IRQn, 0, 0);
  90:Core/Src/can.c ****         HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
  91:Core/Src/can.c ****         /* USER CODE BEGIN CAN1_MspInit 1 */
ARM GAS  /tmp/ccGJBslP.s 			page 5


  92:Core/Src/can.c **** 
  93:Core/Src/can.c ****         /* USER CODE END CAN1_MspInit 1 */
  94:Core/Src/can.c ****     }
  95:Core/Src/can.c **** }
 140              		.loc 1 95 1 view .LVU38
 141 0018 09B0     		add	sp, sp, #36
 142              		.cfi_remember_state
 143              		.cfi_def_cfa_offset 4
 144              		@ sp needed
 145 001a 5DF804FB 		ldr	pc, [sp], #4
 146              	.LVL4:
 147              	.L10:
 148              		.cfi_restore_state
  72:Core/Src/can.c **** 
 149              		.loc 1 72 9 is_stmt 1 view .LVU39
 150              	.LBB2:
  72:Core/Src/can.c **** 
 151              		.loc 1 72 9 view .LVU40
  72:Core/Src/can.c **** 
 152              		.loc 1 72 9 view .LVU41
 153 001e 03F5D633 		add	r3, r3, #109568
 154 0022 9A6D     		ldr	r2, [r3, #88]
 155 0024 42F00072 		orr	r2, r2, #33554432
 156 0028 9A65     		str	r2, [r3, #88]
  72:Core/Src/can.c **** 
 157              		.loc 1 72 9 view .LVU42
 158 002a 9A6D     		ldr	r2, [r3, #88]
 159 002c 02F00072 		and	r2, r2, #33554432
 160 0030 0192     		str	r2, [sp, #4]
  72:Core/Src/can.c **** 
 161              		.loc 1 72 9 view .LVU43
 162 0032 019A     		ldr	r2, [sp, #4]
 163              	.LBE2:
  72:Core/Src/can.c **** 
 164              		.loc 1 72 9 view .LVU44
  74:Core/Src/can.c ****         /**CAN1 GPIO Configuration
 165              		.loc 1 74 9 view .LVU45
 166              	.LBB3:
  74:Core/Src/can.c ****         /**CAN1 GPIO Configuration
 167              		.loc 1 74 9 view .LVU46
  74:Core/Src/can.c ****         /**CAN1 GPIO Configuration
 168              		.loc 1 74 9 view .LVU47
 169 0034 DA6C     		ldr	r2, [r3, #76]
 170 0036 42F00102 		orr	r2, r2, #1
 171 003a DA64     		str	r2, [r3, #76]
  74:Core/Src/can.c ****         /**CAN1 GPIO Configuration
 172              		.loc 1 74 9 view .LVU48
 173 003c DB6C     		ldr	r3, [r3, #76]
 174 003e 03F00103 		and	r3, r3, #1
 175 0042 0293     		str	r3, [sp, #8]
  74:Core/Src/can.c ****         /**CAN1 GPIO Configuration
 176              		.loc 1 74 9 view .LVU49
 177 0044 029B     		ldr	r3, [sp, #8]
 178              	.LBE3:
  74:Core/Src/can.c ****         /**CAN1 GPIO Configuration
 179              		.loc 1 74 9 view .LVU50
  79:Core/Src/can.c ****         GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  /tmp/ccGJBslP.s 			page 6


 180              		.loc 1 79 9 view .LVU51
  79:Core/Src/can.c ****         GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 181              		.loc 1 79 29 is_stmt 0 view .LVU52
 182 0046 4FF4C053 		mov	r3, #6144
 183 004a 0393     		str	r3, [sp, #12]
  80:Core/Src/can.c ****         GPIO_InitStruct.Pull = GPIO_NOPULL;
 184              		.loc 1 80 9 is_stmt 1 view .LVU53
  80:Core/Src/can.c ****         GPIO_InitStruct.Pull = GPIO_NOPULL;
 185              		.loc 1 80 30 is_stmt 0 view .LVU54
 186 004c 0223     		movs	r3, #2
 187 004e 0493     		str	r3, [sp, #16]
  81:Core/Src/can.c ****         GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 188              		.loc 1 81 9 is_stmt 1 view .LVU55
  82:Core/Src/can.c ****         GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
 189              		.loc 1 82 9 view .LVU56
  82:Core/Src/can.c ****         GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
 190              		.loc 1 82 31 is_stmt 0 view .LVU57
 191 0050 0323     		movs	r3, #3
 192 0052 0693     		str	r3, [sp, #24]
  83:Core/Src/can.c ****         HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 193              		.loc 1 83 9 is_stmt 1 view .LVU58
  83:Core/Src/can.c ****         HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 194              		.loc 1 83 35 is_stmt 0 view .LVU59
 195 0054 0923     		movs	r3, #9
 196 0056 0793     		str	r3, [sp, #28]
  84:Core/Src/can.c **** 
 197              		.loc 1 84 9 is_stmt 1 view .LVU60
 198 0058 03A9     		add	r1, sp, #12
 199 005a 4FF09040 		mov	r0, #1207959552
 200              	.LVL5:
  84:Core/Src/can.c **** 
 201              		.loc 1 84 9 is_stmt 0 view .LVU61
 202 005e FFF7FEFF 		bl	HAL_GPIO_Init
 203              	.LVL6:
  87:Core/Src/can.c ****         HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 204              		.loc 1 87 9 is_stmt 1 view .LVU62
 205 0062 0022     		movs	r2, #0
 206 0064 1146     		mov	r1, r2
 207 0066 1420     		movs	r0, #20
 208 0068 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 209              	.LVL7:
  88:Core/Src/can.c ****         HAL_NVIC_SetPriority(CAN1_RX1_IRQn, 0, 0);
 210              		.loc 1 88 9 view .LVU63
 211 006c 1420     		movs	r0, #20
 212 006e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 213              	.LVL8:
  89:Core/Src/can.c ****         HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 214              		.loc 1 89 9 view .LVU64
 215 0072 0022     		movs	r2, #0
 216 0074 1146     		mov	r1, r2
 217 0076 1520     		movs	r0, #21
 218 0078 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 219              	.LVL9:
  90:Core/Src/can.c ****         /* USER CODE BEGIN CAN1_MspInit 1 */
 220              		.loc 1 90 9 view .LVU65
 221 007c 1520     		movs	r0, #21
 222 007e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
ARM GAS  /tmp/ccGJBslP.s 			page 7


 223              	.LVL10:
 224              		.loc 1 95 1 is_stmt 0 view .LVU66
 225 0082 C9E7     		b	.L7
 226              	.L12:
 227              		.align	2
 228              	.L11:
 229 0084 00640040 		.word	1073767424
 230              		.cfi_endproc
 231              	.LFE133:
 233              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 234              		.align	1
 235              		.global	HAL_CAN_MspDeInit
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 240              	HAL_CAN_MspDeInit:
 241              	.LVL11:
 242              	.LFB134:
  96:Core/Src/can.c **** 
  97:Core/Src/can.c **** void HAL_CAN_MspDeInit(CAN_HandleTypeDef *canHandle)
  98:Core/Src/can.c **** {
 243              		.loc 1 98 1 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		.loc 1 98 1 is_stmt 0 view .LVU68
 248 0000 08B5     		push	{r3, lr}
 249              		.cfi_def_cfa_offset 8
 250              		.cfi_offset 3, -8
 251              		.cfi_offset 14, -4
  99:Core/Src/can.c **** 
 100:Core/Src/can.c ****     if (canHandle->Instance == CAN1)
 252              		.loc 1 100 5 is_stmt 1 view .LVU69
 253              		.loc 1 100 18 is_stmt 0 view .LVU70
 254 0002 0268     		ldr	r2, [r0]
 255              		.loc 1 100 8 view .LVU71
 256 0004 0A4B     		ldr	r3, .L17
 257 0006 9A42     		cmp	r2, r3
 258 0008 00D0     		beq	.L16
 259              	.LVL12:
 260              	.L13:
 101:Core/Src/can.c ****     {
 102:Core/Src/can.c ****         /* USER CODE BEGIN CAN1_MspDeInit 0 */
 103:Core/Src/can.c **** 
 104:Core/Src/can.c ****         /* USER CODE END CAN1_MspDeInit 0 */
 105:Core/Src/can.c ****         /* Peripheral clock disable */
 106:Core/Src/can.c ****         __HAL_RCC_CAN1_CLK_DISABLE();
 107:Core/Src/can.c **** 
 108:Core/Src/can.c ****         /**CAN1 GPIO Configuration
 109:Core/Src/can.c ****         PA11     ------> CAN1_RX
 110:Core/Src/can.c ****         PA12     ------> CAN1_TX
 111:Core/Src/can.c ****         */
 112:Core/Src/can.c ****         HAL_GPIO_DeInit(GPIOA, GPIO_PIN_11 | GPIO_PIN_12);
 113:Core/Src/can.c **** 
 114:Core/Src/can.c ****         /* CAN1 interrupt Deinit */
 115:Core/Src/can.c ****         HAL_NVIC_DisableIRQ(CAN1_RX0_IRQn);
 116:Core/Src/can.c ****         HAL_NVIC_DisableIRQ(CAN1_RX1_IRQn);
ARM GAS  /tmp/ccGJBslP.s 			page 8


 117:Core/Src/can.c ****         /* USER CODE BEGIN CAN1_MspDeInit 1 */
 118:Core/Src/can.c **** 
 119:Core/Src/can.c ****         /* USER CODE END CAN1_MspDeInit 1 */
 120:Core/Src/can.c ****     }
 121:Core/Src/can.c **** }
 261              		.loc 1 121 1 view .LVU72
 262 000a 08BD     		pop	{r3, pc}
 263              	.LVL13:
 264              	.L16:
 106:Core/Src/can.c **** 
 265              		.loc 1 106 9 is_stmt 1 view .LVU73
 266 000c 094A     		ldr	r2, .L17+4
 267 000e 936D     		ldr	r3, [r2, #88]
 268 0010 23F00073 		bic	r3, r3, #33554432
 269 0014 9365     		str	r3, [r2, #88]
 112:Core/Src/can.c **** 
 270              		.loc 1 112 9 view .LVU74
 271 0016 4FF4C051 		mov	r1, #6144
 272 001a 4FF09040 		mov	r0, #1207959552
 273              	.LVL14:
 112:Core/Src/can.c **** 
 274              		.loc 1 112 9 is_stmt 0 view .LVU75
 275 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 276              	.LVL15:
 115:Core/Src/can.c ****         HAL_NVIC_DisableIRQ(CAN1_RX1_IRQn);
 277              		.loc 1 115 9 is_stmt 1 view .LVU76
 278 0022 1420     		movs	r0, #20
 279 0024 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 280              	.LVL16:
 116:Core/Src/can.c ****         /* USER CODE BEGIN CAN1_MspDeInit 1 */
 281              		.loc 1 116 9 view .LVU77
 282 0028 1520     		movs	r0, #21
 283 002a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 284              	.LVL17:
 285              		.loc 1 121 1 is_stmt 0 view .LVU78
 286 002e ECE7     		b	.L13
 287              	.L18:
 288              		.align	2
 289              	.L17:
 290 0030 00640040 		.word	1073767424
 291 0034 00100240 		.word	1073876992
 292              		.cfi_endproc
 293              	.LFE134:
 295              		.section	.text.can_msg_send,"ax",%progbits
 296              		.align	1
 297              		.global	can_msg_send
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 302              	can_msg_send:
 303              	.LVL18:
 304              	.LFB135:
 122:Core/Src/can.c **** 
 123:Core/Src/can.c **** /* USER CODE BEGIN 1 */
 124:Core/Src/can.c **** 
 125:Core/Src/can.c **** void can_msg_send(CAN_HandleTypeDef *hcan, uint16_t id, uint8_t aData[], uint8_t dlc, uint32_t Time
 126:Core/Src/can.c **** {
ARM GAS  /tmp/ccGJBslP.s 			page 9


 305              		.loc 1 126 1 is_stmt 1 view -0
 306              		.cfi_startproc
 307              		@ args = 4, pretend = 0, frame = 32
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		.loc 1 126 1 is_stmt 0 view .LVU80
 310 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 311              		.cfi_def_cfa_offset 24
 312              		.cfi_offset 4, -24
 313              		.cfi_offset 5, -20
 314              		.cfi_offset 6, -16
 315              		.cfi_offset 7, -12
 316              		.cfi_offset 8, -8
 317              		.cfi_offset 14, -4
 318 0004 88B0     		sub	sp, sp, #32
 319              		.cfi_def_cfa_offset 56
 320 0006 0446     		mov	r4, r0
 321 0008 8846     		mov	r8, r1
 322 000a 1646     		mov	r6, r2
 323 000c 1F46     		mov	r7, r3
 324 000e 0E9D     		ldr	r5, [sp, #56]
 127:Core/Src/can.c ****     CAN_TxHeaderTypeDef TxHeader;
 325              		.loc 1 127 5 is_stmt 1 view .LVU81
 128:Core/Src/can.c ****     uint32_t tx_mailbox;
 326              		.loc 1 128 5 view .LVU82
 129:Core/Src/can.c ****     static uint32_t can_counter_100us = 0;
 327              		.loc 1 129 5 view .LVU83
 130:Core/Src/can.c ****     can_counter_100us = tick_get_100us();
 328              		.loc 1 130 5 view .LVU84
 329              		.loc 1 130 25 is_stmt 0 view .LVU85
 330 0010 FFF7FEFF 		bl	tick_get_100us
 331              	.LVL19:
 332              		.loc 1 130 23 discriminator 1 view .LVU86
 333 0014 164B     		ldr	r3, .L27
 334 0016 1860     		str	r0, [r3]
 131:Core/Src/can.c **** 
 132:Core/Src/can.c ****     TxHeader.StdId = id;
 335              		.loc 1 132 5 is_stmt 1 view .LVU87
 336              		.loc 1 132 20 is_stmt 0 view .LVU88
 337 0018 CDF80880 		str	r8, [sp, #8]
 133:Core/Src/can.c ****     TxHeader.RTR = CAN_RTR_DATA;
 338              		.loc 1 133 5 is_stmt 1 view .LVU89
 339              		.loc 1 133 18 is_stmt 0 view .LVU90
 340 001c 0022     		movs	r2, #0
 341 001e 0592     		str	r2, [sp, #20]
 134:Core/Src/can.c ****     TxHeader.IDE = CAN_ID_STD;
 342              		.loc 1 134 5 is_stmt 1 view .LVU91
 343              		.loc 1 134 18 is_stmt 0 view .LVU92
 344 0020 0492     		str	r2, [sp, #16]
 135:Core/Src/can.c ****     TxHeader.DLC = dlc;
 345              		.loc 1 135 5 is_stmt 1 view .LVU93
 346              		.loc 1 135 18 is_stmt 0 view .LVU94
 347 0022 0697     		str	r7, [sp, #24]
 136:Core/Src/can.c ****     TxHeader.TransmitGlobalTime = DISABLE;
 348              		.loc 1 136 5 is_stmt 1 view .LVU95
 349              		.loc 1 136 33 is_stmt 0 view .LVU96
 350 0024 8DF81C20 		strb	r2, [sp, #28]
 137:Core/Src/can.c **** 
ARM GAS  /tmp/ccGJBslP.s 			page 10


 138:Core/Src/can.c ****     while (HAL_CAN_GetTxMailboxesFreeLevel(hcan) < 1)
 351              		.loc 1 138 5 is_stmt 1 view .LVU97
 352              	.L21:
 353              		.loc 1 138 50 view .LVU98
 354              		.loc 1 138 12 is_stmt 0 view .LVU99
 355 0028 2046     		mov	r0, r4
 356 002a FFF7FEFF 		bl	HAL_CAN_GetTxMailboxesFreeLevel
 357              	.LVL20:
 358              		.loc 1 138 50 discriminator 1 view .LVU100
 359 002e 68B9     		cbnz	r0, .L25
 139:Core/Src/can.c ****     {
 140:Core/Src/can.c ****         if (delay_fun(&can_counter_100us, TimeOut))
 360              		.loc 1 140 9 is_stmt 1 view .LVU101
 361              		.loc 1 140 13 is_stmt 0 view .LVU102
 362 0030 2946     		mov	r1, r5
 363 0032 0F48     		ldr	r0, .L27
 364 0034 FFF7FEFF 		bl	delay_fun
 365              	.LVL21:
 366              		.loc 1 140 12 discriminator 1 view .LVU103
 367 0038 0028     		cmp	r0, #0
 368 003a F5D0     		beq	.L21
 141:Core/Src/can.c ****         {
 142:Core/Src/can.c ****             // Error_Handler();
 143:Core/Src/can.c ****             HAL_CAN_ResetError(hcan);
 369              		.loc 1 143 13 is_stmt 1 view .LVU104
 370 003c 2046     		mov	r0, r4
 371 003e FFF7FEFF 		bl	HAL_CAN_ResetError
 372              	.LVL22:
 144:Core/Src/can.c ****             HAL_CAN_AbortTxRequest(hcan, tx_mailbox);
 373              		.loc 1 144 13 view .LVU105
 374 0042 0199     		ldr	r1, [sp, #4]
 375 0044 2046     		mov	r0, r4
 376 0046 FFF7FEFF 		bl	HAL_CAN_AbortTxRequest
 377              	.LVL23:
 378 004a EDE7     		b	.L21
 379              	.L25:
 145:Core/Src/can.c ****         }
 146:Core/Src/can.c ****     }
 147:Core/Src/can.c **** 
 148:Core/Src/can.c ****     if (HAL_CAN_AddTxMessage(hcan, &TxHeader, aData, &tx_mailbox) != HAL_OK)
 380              		.loc 1 148 5 view .LVU106
 381              		.loc 1 148 9 is_stmt 0 view .LVU107
 382 004c 01AB     		add	r3, sp, #4
 383 004e 3246     		mov	r2, r6
 384 0050 02A9     		add	r1, sp, #8
 385 0052 2046     		mov	r0, r4
 386 0054 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 387              	.LVL24:
 388              		.loc 1 148 8 discriminator 1 view .LVU108
 389 0058 10B9     		cbnz	r0, .L26
 390              	.L19:
 149:Core/Src/can.c ****     {
 150:Core/Src/can.c ****         /* Transmission request Error */
 151:Core/Src/can.c ****         // Error_Handler();
 152:Core/Src/can.c ****         HAL_CAN_ResetError(hcan);
 153:Core/Src/can.c ****         HAL_CAN_AbortTxRequest(hcan, tx_mailbox);
 154:Core/Src/can.c ****     }
ARM GAS  /tmp/ccGJBslP.s 			page 11


 155:Core/Src/can.c **** }
 391              		.loc 1 155 1 view .LVU109
 392 005a 08B0     		add	sp, sp, #32
 393              		.cfi_remember_state
 394              		.cfi_def_cfa_offset 24
 395              		@ sp needed
 396 005c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 397              	.LVL25:
 398              	.L26:
 399              		.cfi_restore_state
 152:Core/Src/can.c ****         HAL_CAN_AbortTxRequest(hcan, tx_mailbox);
 400              		.loc 1 152 9 is_stmt 1 view .LVU110
 401 0060 2046     		mov	r0, r4
 402 0062 FFF7FEFF 		bl	HAL_CAN_ResetError
 403              	.LVL26:
 153:Core/Src/can.c ****     }
 404              		.loc 1 153 9 view .LVU111
 405 0066 0199     		ldr	r1, [sp, #4]
 406 0068 2046     		mov	r0, r4
 407 006a FFF7FEFF 		bl	HAL_CAN_AbortTxRequest
 408              	.LVL27:
 409              		.loc 1 155 1 is_stmt 0 view .LVU112
 410 006e F4E7     		b	.L19
 411              	.L28:
 412              		.align	2
 413              	.L27:
 414 0070 00000000 		.word	can_counter_100us.0
 415              		.cfi_endproc
 416              	.LFE135:
 418              		.section	.bss.can_counter_100us.0,"aw",%nobits
 419              		.align	2
 422              	can_counter_100us.0:
 423 0000 00000000 		.space	4
 424              		.global	hcan1
 425              		.section	.bss.hcan1,"aw",%nobits
 426              		.align	2
 429              	hcan1:
 430 0000 00000000 		.space	40
 430      00000000 
 430      00000000 
 430      00000000 
 430      00000000 
 431              		.text
 432              	.Letext0:
 433              		.file 2 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 434              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 435              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 436              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 437              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 438              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 439              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_can.h"
 440              		.file 9 "Core/Inc/utils.h"
 441              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
 442              		.file 11 "Core/Inc/can.h"
 443              		.file 12 "Core/Inc/main.h"
ARM GAS  /tmp/ccGJBslP.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 can.c
     /tmp/ccGJBslP.s:21     .text.MX_CAN1_Init:00000000 $t
     /tmp/ccGJBslP.s:27     .text.MX_CAN1_Init:00000000 MX_CAN1_Init
     /tmp/ccGJBslP.s:98     .text.MX_CAN1_Init:0000003c $d
     /tmp/ccGJBslP.s:429    .bss.hcan1:00000000 hcan1
     /tmp/ccGJBslP.s:104    .text.HAL_CAN_MspInit:00000000 $t
     /tmp/ccGJBslP.s:110    .text.HAL_CAN_MspInit:00000000 HAL_CAN_MspInit
     /tmp/ccGJBslP.s:229    .text.HAL_CAN_MspInit:00000084 $d
     /tmp/ccGJBslP.s:234    .text.HAL_CAN_MspDeInit:00000000 $t
     /tmp/ccGJBslP.s:240    .text.HAL_CAN_MspDeInit:00000000 HAL_CAN_MspDeInit
     /tmp/ccGJBslP.s:290    .text.HAL_CAN_MspDeInit:00000030 $d
     /tmp/ccGJBslP.s:296    .text.can_msg_send:00000000 $t
     /tmp/ccGJBslP.s:302    .text.can_msg_send:00000000 can_msg_send
     /tmp/ccGJBslP.s:414    .text.can_msg_send:00000070 $d
     /tmp/ccGJBslP.s:422    .bss.can_counter_100us.0:00000000 can_counter_100us.0
     /tmp/ccGJBslP.s:419    .bss.can_counter_100us.0:00000000 $d
     /tmp/ccGJBslP.s:426    .bss.hcan1:00000000 $d

UNDEFINED SYMBOLS
HAL_CAN_Init
Error_Handler
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
tick_get_100us
HAL_CAN_GetTxMailboxesFreeLevel
delay_fun
HAL_CAN_ResetError
HAL_CAN_AbortTxRequest
HAL_CAN_AddTxMessage

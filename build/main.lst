ARM GAS  /tmp/ccqY1rUa.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.Error_Handler,"ax",%progbits
  21              		.align	1
  22              		.global	Error_Handler
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	Error_Handler:
  28              	.LFB134:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "can.h"
  22:Core/Src/main.c **** #include "gpio.h"
  23:Core/Src/main.c **** #include "spi.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "can_comms.h"
  28:Core/Src/main.c **** #include "mission.h"
  29:Core/Src/main.c **** #include "utils.h"
  30:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccqY1rUa.s 			page 2


  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****  * @brief  The application entry point.
  66:Core/Src/main.c ****  * @retval int
  67:Core/Src/main.c ****  */
  68:Core/Src/main.c **** int main(void)
  69:Core/Src/main.c **** {
  70:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****     /* USER CODE END 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****     /* MCU Configuration--------------------------------------------------------*/
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Core/Src/main.c ****     HAL_Init();
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****     /* USER CODE BEGIN Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****     /* USER CODE END Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****     /* Configure the system clock */
  84:Core/Src/main.c ****     SystemClock_Config();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****     /* USER CODE BEGIN SysInit */
  87:Core/Src/main.c **** 
ARM GAS  /tmp/ccqY1rUa.s 			page 3


  88:Core/Src/main.c ****     /* USER CODE END SysInit */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****     /* Initialize all configured peripherals */
  91:Core/Src/main.c ****     MX_GPIO_Init();
  92:Core/Src/main.c ****     MX_CAN1_Init();
  93:Core/Src/main.c ****     MX_SPI1_Init();
  94:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****     /* USER CODE END 2 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****     /* Infinite loop */
  99:Core/Src/main.c ****     /* USER CODE BEGIN WHILE */
 100:Core/Src/main.c ****     while (1)
 101:Core/Src/main.c ****     {
 102:Core/Src/main.c ****         /* USER CODE END WHILE */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****         /* USER CODE BEGIN 3 */
 105:Core/Src/main.c ****         mission_run();
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****         static uint32_t delay_100us_last = 0;
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****         if (delay_fun(&delay_100us_last, 500))
 110:Core/Src/main.c ****         {
 111:Core/Src/main.c ****             uint8_t data = mission_is_confirmed() ? mission_get() : MISSION_NO;
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****             can_msg_send(&hcan1, CAN_MISSION_STATUS_ID, &data, 1, 30);
 114:Core/Src/main.c ****         }
 115:Core/Src/main.c ****     }
 116:Core/Src/main.c ****     /* USER CODE END 3 */
 117:Core/Src/main.c **** }
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** /**
 120:Core/Src/main.c ****  * @brief System Clock Configuration
 121:Core/Src/main.c ****  * @retval None
 122:Core/Src/main.c ****  */
 123:Core/Src/main.c **** void SystemClock_Config(void)
 124:Core/Src/main.c **** {
 125:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 126:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****     /** Configure the main internal regulator output voltage
 129:Core/Src/main.c ****      */
 130:Core/Src/main.c ****     if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 131:Core/Src/main.c ****     {
 132:Core/Src/main.c ****         Error_Handler();
 133:Core/Src/main.c ****     }
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 136:Core/Src/main.c ****      * in the RCC_OscInitTypeDef structure.
 137:Core/Src/main.c ****      */
 138:Core/Src/main.c ****     RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 139:Core/Src/main.c ****     RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 140:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 141:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 142:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM = 5;
 143:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN = 32;
 144:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
ARM GAS  /tmp/ccqY1rUa.s 			page 4


 145:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 146:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 147:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 148:Core/Src/main.c ****     {
 149:Core/Src/main.c ****         Error_Handler();
 150:Core/Src/main.c ****     }
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****     /** Initializes the CPU, AHB and APB buses clocks
 153:Core/Src/main.c ****      */
 154:Core/Src/main.c ****     RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 |
 155:Core/Src/main.c ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 156:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 157:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 158:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****     if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 161:Core/Src/main.c ****     {
 162:Core/Src/main.c ****         Error_Handler();
 163:Core/Src/main.c ****     }
 164:Core/Src/main.c **** }
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** /* USER CODE END 4 */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** /**
 171:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 172:Core/Src/main.c ****  * @retval None
 173:Core/Src/main.c ****  */
 174:Core/Src/main.c **** void Error_Handler(void)
 175:Core/Src/main.c **** {
  29              		.loc 1 175 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 176:Core/Src/main.c ****     /* USER CODE BEGIN Error_Handler_Debug */
 177:Core/Src/main.c ****     /* User can add his own implementation to report the HAL error return state */
 178:Core/Src/main.c ****     __disable_irq();
  35              		.loc 1 178 5 view .LVU1
  36              	.LBB4:
  37              	.LBI4:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
ARM GAS  /tmp/ccqY1rUa.s 			page 5


  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
ARM GAS  /tmp/ccqY1rUa.s 			page 6


  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
ARM GAS  /tmp/ccqY1rUa.s 			page 7


 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccqY1rUa.s 			page 8


 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 207 27 view .LVU2
  40              	.LBB5:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 209 3 view .LVU3
  42              		.syntax unified
  43              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE5:
  50              	.LBE4:
 179:Core/Src/main.c ****     while (1)
  51              		.loc 1 179 5 view .LVU4
 180:Core/Src/main.c ****     {
 181:Core/Src/main.c ****     }
  52              		.loc 1 181 5 view .LVU5
 179:Core/Src/main.c ****     while (1)
  53              		.loc 1 179 11 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE134:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
  59              		.align	1
  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  65              	SystemClock_Config:
  66              	.LFB133:
 124:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  67              		.loc 1 124 1 view -0
ARM GAS  /tmp/ccqY1rUa.s 			page 9


  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 88
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 00B5     		push	{lr}
  72              		.cfi_def_cfa_offset 4
  73              		.cfi_offset 14, -4
  74 0002 97B0     		sub	sp, sp, #92
  75              		.cfi_def_cfa_offset 96
 125:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  76              		.loc 1 125 5 view .LVU8
 125:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  77              		.loc 1 125 24 is_stmt 0 view .LVU9
  78 0004 4422     		movs	r2, #68
  79 0006 0021     		movs	r1, #0
  80 0008 05A8     		add	r0, sp, #20
  81 000a FFF7FEFF 		bl	memset
  82              	.LVL0:
 126:Core/Src/main.c **** 
  83              		.loc 1 126 5 is_stmt 1 view .LVU10
 126:Core/Src/main.c **** 
  84              		.loc 1 126 24 is_stmt 0 view .LVU11
  85 000e 0023     		movs	r3, #0
  86 0010 0093     		str	r3, [sp]
  87 0012 0193     		str	r3, [sp, #4]
  88 0014 0293     		str	r3, [sp, #8]
  89 0016 0393     		str	r3, [sp, #12]
  90 0018 0493     		str	r3, [sp, #16]
 130:Core/Src/main.c ****     {
  91              		.loc 1 130 5 is_stmt 1 view .LVU12
 130:Core/Src/main.c ****     {
  92              		.loc 1 130 9 is_stmt 0 view .LVU13
  93 001a 4FF40070 		mov	r0, #512
  94 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
  95              	.LVL1:
 130:Core/Src/main.c ****     {
  96              		.loc 1 130 8 discriminator 1 view .LVU14
  97 0022 20BB     		cbnz	r0, .L8
 138:Core/Src/main.c ****     RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
  98              		.loc 1 138 5 is_stmt 1 view .LVU15
 138:Core/Src/main.c ****     RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
  99              		.loc 1 138 38 is_stmt 0 view .LVU16
 100 0024 0123     		movs	r3, #1
 101 0026 0593     		str	r3, [sp, #20]
 139:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 102              		.loc 1 139 5 is_stmt 1 view .LVU17
 139:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 103              		.loc 1 139 32 is_stmt 0 view .LVU18
 104 0028 4FF4A023 		mov	r3, #327680
 105 002c 0693     		str	r3, [sp, #24]
 140:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 106              		.loc 1 140 5 is_stmt 1 view .LVU19
 140:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 107              		.loc 1 140 36 is_stmt 0 view .LVU20
 108 002e 0223     		movs	r3, #2
 109 0030 0F93     		str	r3, [sp, #60]
 141:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM = 5;
 110              		.loc 1 141 5 is_stmt 1 view .LVU21
ARM GAS  /tmp/ccqY1rUa.s 			page 10


 141:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM = 5;
 111              		.loc 1 141 37 is_stmt 0 view .LVU22
 112 0032 0322     		movs	r2, #3
 113 0034 1092     		str	r2, [sp, #64]
 142:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN = 32;
 114              		.loc 1 142 5 is_stmt 1 view .LVU23
 142:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN = 32;
 115              		.loc 1 142 32 is_stmt 0 view .LVU24
 116 0036 0522     		movs	r2, #5
 117 0038 1192     		str	r2, [sp, #68]
 143:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 118              		.loc 1 143 5 is_stmt 1 view .LVU25
 143:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 119              		.loc 1 143 32 is_stmt 0 view .LVU26
 120 003a 2022     		movs	r2, #32
 121 003c 1292     		str	r2, [sp, #72]
 144:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 122              		.loc 1 144 5 is_stmt 1 view .LVU27
 144:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 123              		.loc 1 144 32 is_stmt 0 view .LVU28
 124 003e 0722     		movs	r2, #7
 125 0040 1392     		str	r2, [sp, #76]
 145:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 126              		.loc 1 145 5 is_stmt 1 view .LVU29
 145:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 127              		.loc 1 145 32 is_stmt 0 view .LVU30
 128 0042 1493     		str	r3, [sp, #80]
 146:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 129              		.loc 1 146 5 is_stmt 1 view .LVU31
 146:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 130              		.loc 1 146 32 is_stmt 0 view .LVU32
 131 0044 1593     		str	r3, [sp, #84]
 147:Core/Src/main.c ****     {
 132              		.loc 1 147 5 is_stmt 1 view .LVU33
 147:Core/Src/main.c ****     {
 133              		.loc 1 147 9 is_stmt 0 view .LVU34
 134 0046 05A8     		add	r0, sp, #20
 135 0048 FFF7FEFF 		bl	HAL_RCC_OscConfig
 136              	.LVL2:
 147:Core/Src/main.c ****     {
 137              		.loc 1 147 8 discriminator 1 view .LVU35
 138 004c 88B9     		cbnz	r0, .L9
 154:Core/Src/main.c ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 139              		.loc 1 154 5 is_stmt 1 view .LVU36
 154:Core/Src/main.c ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 140              		.loc 1 154 33 is_stmt 0 view .LVU37
 141 004e 0F23     		movs	r3, #15
 142 0050 0093     		str	r3, [sp]
 155:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 143              		.loc 1 155 5 is_stmt 1 view .LVU38
 155:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 144              		.loc 1 155 36 is_stmt 0 view .LVU39
 145 0052 0323     		movs	r3, #3
 146 0054 0193     		str	r3, [sp, #4]
 156:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 147              		.loc 1 156 5 is_stmt 1 view .LVU40
 156:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/ccqY1rUa.s 			page 11


 148              		.loc 1 156 37 is_stmt 0 view .LVU41
 149 0056 0023     		movs	r3, #0
 150 0058 0293     		str	r3, [sp, #8]
 157:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 151              		.loc 1 157 5 is_stmt 1 view .LVU42
 157:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 152              		.loc 1 157 38 is_stmt 0 view .LVU43
 153 005a 0393     		str	r3, [sp, #12]
 158:Core/Src/main.c **** 
 154              		.loc 1 158 5 is_stmt 1 view .LVU44
 158:Core/Src/main.c **** 
 155              		.loc 1 158 38 is_stmt 0 view .LVU45
 156 005c 0493     		str	r3, [sp, #16]
 160:Core/Src/main.c ****     {
 157              		.loc 1 160 5 is_stmt 1 view .LVU46
 160:Core/Src/main.c ****     {
 158              		.loc 1 160 9 is_stmt 0 view .LVU47
 159 005e 0421     		movs	r1, #4
 160 0060 6846     		mov	r0, sp
 161 0062 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 162              	.LVL3:
 160:Core/Src/main.c ****     {
 163              		.loc 1 160 8 discriminator 1 view .LVU48
 164 0066 30B9     		cbnz	r0, .L10
 164:Core/Src/main.c **** 
 165              		.loc 1 164 1 view .LVU49
 166 0068 17B0     		add	sp, sp, #92
 167              		.cfi_remember_state
 168              		.cfi_def_cfa_offset 4
 169              		@ sp needed
 170 006a 5DF804FB 		ldr	pc, [sp], #4
 171              	.L8:
 172              		.cfi_restore_state
 132:Core/Src/main.c ****     }
 173              		.loc 1 132 9 is_stmt 1 view .LVU50
 174 006e FFF7FEFF 		bl	Error_Handler
 175              	.LVL4:
 176              	.L9:
 149:Core/Src/main.c ****     }
 177              		.loc 1 149 9 view .LVU51
 178 0072 FFF7FEFF 		bl	Error_Handler
 179              	.LVL5:
 180              	.L10:
 162:Core/Src/main.c ****     }
 181              		.loc 1 162 9 view .LVU52
 182 0076 FFF7FEFF 		bl	Error_Handler
 183              	.LVL6:
 184              		.cfi_endproc
 185              	.LFE133:
 187              		.section	.text.main,"ax",%progbits
 188              		.align	1
 189              		.global	main
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 194              	main:
 195              	.LFB132:
ARM GAS  /tmp/ccqY1rUa.s 			page 12


  69:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 196              		.loc 1 69 1 view -0
 197              		.cfi_startproc
 198              		@ Volatile: function does not return.
 199              		@ args = 0, pretend = 0, frame = 8
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201 0000 00B5     		push	{lr}
 202              		.cfi_def_cfa_offset 4
 203              		.cfi_offset 14, -4
 204 0002 85B0     		sub	sp, sp, #20
 205              		.cfi_def_cfa_offset 24
  77:Core/Src/main.c **** 
 206              		.loc 1 77 5 view .LVU54
 207 0004 FFF7FEFF 		bl	HAL_Init
 208              	.LVL7:
  84:Core/Src/main.c **** 
 209              		.loc 1 84 5 view .LVU55
 210 0008 FFF7FEFF 		bl	SystemClock_Config
 211              	.LVL8:
  91:Core/Src/main.c ****     MX_CAN1_Init();
 212              		.loc 1 91 5 view .LVU56
 213 000c FFF7FEFF 		bl	MX_GPIO_Init
 214              	.LVL9:
  92:Core/Src/main.c ****     MX_SPI1_Init();
 215              		.loc 1 92 5 view .LVU57
 216 0010 FFF7FEFF 		bl	MX_CAN1_Init
 217              	.LVL10:
  93:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 218              		.loc 1 93 5 view .LVU58
 219 0014 FFF7FEFF 		bl	MX_SPI1_Init
 220              	.LVL11:
 221 0018 0BE0     		b	.L12
 222              	.L15:
 223              	.LBB6:
 224              	.LBB7:
 111:Core/Src/main.c **** 
 225              		.loc 1 111 21 is_stmt 0 discriminator 2 view .LVU59
 226 001a 0020     		movs	r0, #0
 227              	.L13:
 111:Core/Src/main.c **** 
 228              		.loc 1 111 21 discriminator 4 view .LVU60
 229 001c 8DF80F00 		strb	r0, [sp, #15]
 113:Core/Src/main.c ****         }
 230              		.loc 1 113 13 is_stmt 1 view .LVU61
 231 0020 1E23     		movs	r3, #30
 232 0022 0093     		str	r3, [sp]
 233 0024 0123     		movs	r3, #1
 234 0026 0DF10F02 		add	r2, sp, #15
 235 002a D421     		movs	r1, #212
 236 002c 0948     		ldr	r0, .L17
 237 002e FFF7FEFF 		bl	can_msg_send
 238              	.LVL12:
 239              	.L12:
 240              	.LBE7:
 241              	.LBE6:
 100:Core/Src/main.c ****     {
 242              		.loc 1 100 5 view .LVU62
ARM GAS  /tmp/ccqY1rUa.s 			page 13


 243              	.LBB9:
 105:Core/Src/main.c **** 
 244              		.loc 1 105 9 view .LVU63
 245 0032 FFF7FEFF 		bl	mission_run
 246              	.LVL13:
 107:Core/Src/main.c **** 
 247              		.loc 1 107 9 view .LVU64
 109:Core/Src/main.c ****         {
 248              		.loc 1 109 9 view .LVU65
 109:Core/Src/main.c ****         {
 249              		.loc 1 109 13 is_stmt 0 view .LVU66
 250 0036 4FF4FA71 		mov	r1, #500
 251 003a 0748     		ldr	r0, .L17+4
 252 003c FFF7FEFF 		bl	delay_fun
 253              	.LVL14:
 109:Core/Src/main.c ****         {
 254              		.loc 1 109 12 discriminator 1 view .LVU67
 255 0040 0028     		cmp	r0, #0
 256 0042 F6D0     		beq	.L12
 257              	.LBB8:
 111:Core/Src/main.c **** 
 258              		.loc 1 111 13 is_stmt 1 view .LVU68
 111:Core/Src/main.c **** 
 259              		.loc 1 111 28 is_stmt 0 view .LVU69
 260 0044 FFF7FEFF 		bl	mission_is_confirmed
 261              	.LVL15:
 111:Core/Src/main.c **** 
 262              		.loc 1 111 21 discriminator 1 view .LVU70
 263 0048 0028     		cmp	r0, #0
 264 004a E6D0     		beq	.L15
 111:Core/Src/main.c **** 
 265              		.loc 1 111 53 discriminator 1 view .LVU71
 266 004c FFF7FEFF 		bl	mission_get
 267              	.LVL16:
 268 0050 E4E7     		b	.L13
 269              	.L18:
 270 0052 00BF     		.align	2
 271              	.L17:
 272 0054 00000000 		.word	hcan1
 273 0058 00000000 		.word	delay_100us_last.0
 274              	.LBE8:
 275              	.LBE9:
 276              		.cfi_endproc
 277              	.LFE132:
 279              		.section	.bss.delay_100us_last.0,"aw",%nobits
 280              		.align	2
 283              	delay_100us_last.0:
 284 0000 00000000 		.space	4
 285              		.text
 286              	.Letext0:
 287              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 288              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 289              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 290              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 291              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 292              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 293              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_can.h"
ARM GAS  /tmp/ccqY1rUa.s 			page 14


 294              		.file 10 "Core/Inc/mission.h"
 295              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 296              		.file 12 "Core/Inc/can.h"
 297              		.file 13 "Core/Inc/utils.h"
 298              		.file 14 "Core/Inc/spi.h"
 299              		.file 15 "Core/Inc/gpio.h"
 300              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 301              		.file 17 "<built-in>"
ARM GAS  /tmp/ccqY1rUa.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccqY1rUa.s:21     .text.Error_Handler:00000000 $t
     /tmp/ccqY1rUa.s:27     .text.Error_Handler:00000000 Error_Handler
     /tmp/ccqY1rUa.s:59     .text.SystemClock_Config:00000000 $t
     /tmp/ccqY1rUa.s:65     .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccqY1rUa.s:188    .text.main:00000000 $t
     /tmp/ccqY1rUa.s:194    .text.main:00000000 main
     /tmp/ccqY1rUa.s:272    .text.main:00000054 $d
     /tmp/ccqY1rUa.s:283    .bss.delay_100us_last.0:00000000 delay_100us_last.0
     /tmp/ccqY1rUa.s:280    .bss.delay_100us_last.0:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_CAN1_Init
MX_SPI1_Init
can_msg_send
mission_run
delay_fun
mission_is_confirmed
mission_get
hcan1
